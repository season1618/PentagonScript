func mid(A: Point, B: Point): Point {
    var AB = Line(A, B);
    var d = len(AB);
    var c1 = Circle(A, d*3/5);
    var c2 = Circle(B, d*3/5);
    var (x, y) = and(c1, c2);
    return and(AB, Line(x, y);
}

func angleBisector(O: Point, a: Line, b: Line): Line {
    var d = len(a) / 2;
    var c = Circle(O, d)
    var X = and(a, c);
    var Y = and(b, c);
    var Z = and(Circle(X, d), Circle(Y, d));
    return Line(O, Z);
}

func perp(A: Point, a: Line): Line {
    var (x, y) = and(Circle(A, 100), a);
    var B = and(Circle(x, 120), Circle(y, 120));
    return Line(A, B);
}

var O = Point(0, 0);
var A = Point(1000, 0);
var B = Point(0, 1000);

var C = mid(O, mid(O, B));
var d = angleBisector(C, Line(C, O), angleBisector(C, Line(C, O), Line(C, A)));
var D = and(Line(O, A), d);
var e = perp(C, Line(C, D));
var f = angleBisector(C, e, Line(C, D));
var E = and(Line(O, A), f);

var M = mid(A, E);
var F = and(Line(O, B), Circle(M, Line(M, A)));
var G = and(Line(O, A), Circle(D, Line(D, F)));
var H = and(perp(G, Line(A, O)), Circle(O, Line(O, A)));

var p[0] = A;
var p[3] = H;
var s = len(Line(A, H));
for(i in [2, 17]){
    var p[3*i%17] = and(Circle(p[3*(i-1)%17], s), Circle(O, Line(O, A)));
}
for(i in [0, 17]){
    Line(p[i], p[(i+1)%17]);
}